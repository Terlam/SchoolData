"""Initial Migration

Revision ID: 64b2c4731024
Revises: 
Create Date: 2020-12-04 05:34:23.042638

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '64b2c4731024'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('school',
    sa.Column('rctds', sa.String(length=15), nullable=False),
    sa.Column('group_type', sa.String(length=100), nullable=True),
    sa.Column('school_name', sa.String(length=100), nullable=True),
    sa.Column('district_name', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('county', sa.String(length=100), nullable=False),
    sa.Column('school_type', sa.String(length=100), nullable=True),
    sa.Column('grades_served', sa.String(length=100), nullable=True),
    sa.Column('total_enrollment', sa.Integer(), nullable=True),
    sa.Column('total_enrollment_white', sa.Float(), nullable=True),
    sa.Column('total_enrollment_black', sa.Float(), nullable=True),
    sa.Column('total_enrollment_latinx', sa.Float(), nullable=True),
    sa.Column('total_enrollment_asian', sa.Float(), nullable=True),
    sa.Column('total_enrollment_pacific_island', sa.Float(), nullable=True),
    sa.Column('total_enrollment_indig', sa.Float(), nullable=True),
    sa.Column('total_enrollment_mixed', sa.Float(), nullable=True),
    sa.Column('total_enrollment_low_income', sa.Float(), nullable=True),
    sa.Column('total_enrollment_homeless', sa.Float(), nullable=True),
    sa.Column('mobility_rate', sa.Float(), nullable=True),
    sa.Column('mobility_rate_low_income', sa.Float(), nullable=True),
    sa.Column('truancy_rate', sa.Float(), nullable=True),
    sa.Column('dropout_rate', sa.Float(), nullable=True),
    sa.Column('dropout_rate_low_income', sa.Float(), nullable=True),
    sa.Column('grad_rate', sa.Float(), nullable=True),
    sa.Column('grad_rate_low_income', sa.Float(), nullable=True),
    sa.Column('grad_rate_homeless', sa.Float(), nullable=True),
    sa.Column('class_size_hs', sa.Float(), nullable=True),
    sa.Column('class_size_all', sa.Float(), nullable=True),
    sa.Column('teacher_salary', sa.Integer(), nullable=True),
    sa.Column('admin_salary', sa.Integer(), nullable=True),
    sa.Column('on_track_fresh', sa.Integer(), nullable=True),
    sa.Column('on_track_fresh_p', sa.Float(), nullable=True),
    sa.Column('on_track_fresh_p_low_income', sa.Float(), nullable=True),
    sa.Column('college_enrollment', sa.Float(), nullable=True),
    sa.Column('community_college_enrollment', sa.Integer(), nullable=True),
    sa.Column('commmunity_college_remediation', sa.Float(), nullable=True),
    sa.Column('ap_exam_fresh', sa.Integer(), nullable=True),
    sa.Column('ap_exam_fresh_pass', sa.Integer(), nullable=True),
    sa.Column('ap_exam_soph', sa.Integer(), nullable=True),
    sa.Column('ap_exam_soph_pass', sa.Integer(), nullable=True),
    sa.Column('ap_exam_jr', sa.Integer(), nullable=True),
    sa.Column('ap_exam_jr_pass', sa.Integer(), nullable=True),
    sa.Column('ap_exam_sr', sa.Integer(), nullable=True),
    sa.Column('ap_exam_sr_pass', sa.Integer(), nullable=True),
    sa.Column('crdc_violence', sa.Integer(), nullable=True),
    sa.Column('crdc_violence_p', sa.Float(), nullable=True),
    sa.Column('crdc_dual_credit', sa.Integer(), nullable=True),
    sa.Column('crdc_dual_credit_p', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('rctds'),
    sa.UniqueConstraint('rctds')
    )
    op.create_table('user',
    sa.Column('id', sa.String(length=200), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('token', sa.String(length=400), nullable=True),
    sa.Column('token_refreshed', sa.Boolean(), nullable=True),
    sa.Column('date_refreshed', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('schools')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schools',
    sa.Column('rcdts', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('group_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('school_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('district_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('county', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('school_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('grades_served', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('total_enrollment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_enrollment_white', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_enrollment_black', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_enrollment_latinx', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_enrollment_asian', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_enrollment_pacific_island', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_enrollment_indig', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_enrollloment_mixed', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_enrollment_low_income', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_enrollment_homeless', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('mobility_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('mobility_rate_low_income', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('truancy_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dropout_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dropout_rate_low_income', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('grad_rate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('grad_rate_low_income', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('grad_rate_homeless', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('class_size_hs', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('class_size_all', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('teacher_salary', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('admin_salary', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('on_track_fresh', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('on_track_fresh_p', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('on_track_fresh_p_low_income', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('college_enrollment', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('community_college_enrollment', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('communty_college_remediation', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ap_exam_fresh', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ap_exam_fresh_pass', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ap_exam_soph', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ap_exam_soph_pass', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ap_exam_jr', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ap_exam_jr_pass', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ap_exam_sr', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ap_exam_sr_pass', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('crdc_violence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('crdc_violence_p', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('crdc_dual_credit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('crdc_dual_credit_p', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.drop_table('user')
    op.drop_table('school')
    # ### end Alembic commands ###
